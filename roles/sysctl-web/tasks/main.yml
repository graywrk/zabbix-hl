---
# Source: https://gist.github.com/kgriffs/4027835

- name: (set sysctl) Protection from SYN flood attack
  sysctl:
    name: net.ipv4.tcp_syncookies
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Enable source validation by reversed path, as specified in RFC1812
  sysctl:
    name: net.ipv4.conf.all.rp_filter 
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
  sysctl:
    name: net.ipv4.icmp_echo_ignore_broadcasts
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Ignore all ICMP ECHO and TIMESTAMP requests sent to it via broadcast/multicast
  sysctl:
    name: net.ipv4.icmp_ignore_bogus_error_responses
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase number of incoming connections that can queue up before dropping
  sysctl:
    name: net.core.somaxconn
    value: '5000'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Handle SYN floods and large numbers of valid HTTPS connections
  sysctl:
    name: net.ipv4.tcp_max_syn_backlog
    value: '3000'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase the length of the network device input queue
  sysctl:
    name: net.core.netdev_max_backlog 
    value: '5000'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase system file descriptor limit so we will (probably) never run out under lots of concurrent requests
  sysctl:
    name: fs.file-max
    value: '184028'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Widen the port range used for outgoing connections
  sysctl:
    name: net.ipv4.ip_local_port_range
    value: '10000 65000'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable source routing and redirects
  sysctl:
    name: net.ipv4.conf.all.send_redirects
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable source routing and redirects
  sysctl:
    name: net.ipv4.conf.all.accept_redirects
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable source routing and redirects
  sysctl:
    name: net.ipv4.conf.all.accept_source_route
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable source routing and redirects
  sysctl:
    name: net.ipv4.conf.all.secure_redirects
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable packet forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable packet forwarding
  sysctl:
    name: net.ipv6.conf.all.forwarding
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disable TCP slow start on idle connections
  sysctl:
    name: net.ipv4.tcp_slow_start_after_idle
    value: '0'
    sysctl_set: yes
    state: present
    reload: yes

# Increase Linux autotuning TCP buffer limits
# Set max to 16MB for 1GE and 32M (33554432) or 54M (56623104) for 10GE
# Don't set tcp_mem itself! Let the kernel scale it based on RAM.
- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.core.rmem_max
    value: '16777216'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.core.wmem_max
    value: '16777216'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.core.rmem_default
    value: '16777216'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.core.wmem_default
    value: '16777216'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.core.optmem_max
    value: '40960'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.ipv4.tcp_rmem
    value: '4096 87380 16777216'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Increase Linux autotuning TCP buffer limits
  sysctl:
    name: net.ipv4.tcp_wmem
    value: '4096 65536 16777216'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Enable BBR (requires Linux kernel version 4.9 or higher)
  sysctl:
    name: net.core.default_qdisc
    value: 'fq'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Enable BBR (requires Linux kernel version 4.9 or higher)
  sysctl:
    name: net.ipv4.tcp_congestion_control
    value: 'bbr'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Disconnect dead TCP connections after 1 minute
  sysctl:
    name: net.ipv4.tcp_keepalive_time
    value: '60'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Allow a high number of timewait sockets
  sysctl:
    name: net.ipv4.tcp_max_tw_buckets
    value: '40960'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Timeout broken connections faster (amount of time to wait for FIN)
  sysctl:
    name: net.ipv4.tcp_fin_timeout
    value: '10'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Let the networking stack reuse TIME_WAIT connections when it thinks it's safe to do so
  sysctl:
    name: net.ipv4.tcp_tw_reuse 
    value: '1'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Determines the wait time between isAlive interval probes (reduce from 75 sec to 15)
  sysctl:
    name: net.ipv4.tcp_keepalive_intvl
    value: '15'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Determines the number of probes before timing out (reduce from 9 sec to 5 sec)
  sysctl:
    name: net.ipv4.tcp_keepalive_probes
    value: '5'
    sysctl_set: yes
    state: present
    reload: yes

- name: (set sysctl) Optimize TCP connection setup
  sysctl:
    name: net.ipv4.tcp_fastopen
    value: '3'
    sysctl_set: yes
    state: present
    reload: yes